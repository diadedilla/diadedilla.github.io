{"version":3,"sources":["Components/Timer.jsx","Components/About.jsx","Components/Recipe.jsx","strings.js","Components/Recipes.jsx","Components/Navigation.jsx","App.js","serviceWorker.js","index.js"],"names":["Timer","state","days","undefined","hours","minutes","seconds","this","interval","setInterval","props","timeTillDate","timeFormat","then","moment","now","countdown","format","setState","clearInterval","daysRadius","mapNumber","hoursRadius","minutesRadius","secondsRadius","className","radius","Component","SVGCircle","fill","stroke","stroke-width","d","describeArc","polarToCartesian","centerX","centerY","angleInDegrees","angleInRadians","Math","PI","x","cos","y","sin","startAngle","endAngle","start","end","largeArcFlag","join","number","in_min","in_max","out_min","out_max","About","width","window","innerWidth","document","title","Container","style","height","display","justifyContent","alignItems","marginTop","Row","Recipe","info","Button","src","image","alt","label","categ","SMORE","POLLO","OREO","CALI","TRIPE","CARNE","Recipes","Navigation","Navbar","Brand","href","paddingLeft","Nav","paddingRight","Link","App","active","basename","process","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8ea4f717.chunk.js","sourcesContent":["import moment from 'moment';\nimport React, { Component } from 'react';\n\nimport './timer.css';\n\n/* Credit: https://www.florin-pop.com/blog/2019/05/countdown-built-with-react/*/\nexport default class Timer extends Component {\n    state = {\n        days: undefined,\n        hours: undefined,\n        minutes: undefined,\n        seconds: undefined\n    };\n\n    componentDidMount() {\n        this.interval = setInterval(() => {\n            const { timeTillDate, timeFormat } = this.props;\n            const then = moment(timeTillDate, timeFormat);\n            const now = moment();\n            const countdown = moment(then - now);\n            const days = countdown.format('D');\n            const hours = countdown.format('HH');\n            const minutes = countdown.format('mm');\n            const seconds = countdown.format('ss');\n\n            this.setState({ days, hours, minutes, seconds });\n        }, 1000);\n    }\n\n    componentWillUnmount() {\n        if (this.interval) {\n            clearInterval(this.interval);\n        }\n    }\n\n    render() {\n        const { days, hours, minutes, seconds } = this.state;\n\n        // Mapping the date values to radius values\n        const daysRadius = mapNumber(days, 30, 0, 0, 360);\n        const hoursRadius = mapNumber(hours, 24, 0, 0, 360);\n        const minutesRadius = mapNumber(minutes, 60, 0, 0, 360);\n        const secondsRadius = mapNumber(seconds, 60, 0, 0, 360);\n\n        if (!seconds) {\n            return null;\n        }\n\n        return (\n            <div>\n                <h1>Time until DÃ­a de Dilla</h1>\n                <div className='countdown-wrapper'>\n                    {days && (\n                        <div className='countdown-item'>\n                            <SVGCircle radius={daysRadius} />\n                            {days}\n                            <span>days</span>\n                        </div>\n                    )}\n                    {hours && (\n                        <div className=\"countdown-item\">\n                            <SVGCircle radius={hoursRadius} />\n                            {hours}\n                            <span>hours</span>\n                        </div>\n                    )}\n                    {minutes && (\n                        <div className=\"countdown-item\">\n                            <SVGCircle radius={minutesRadius} />\n                            {minutes}\n                            <span>minutes</span>\n                        </div>\n                    )}\n                    {seconds && (\n                        <div className=\"countdown-item\">\n                            <SVGCircle radius={secondsRadius} />\n                            {seconds}\n                            <span>seconds</span>\n                        </div>\n                    )}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst SVGCircle = ({ radius }) => (\n    <svg className=\"countdown-svg\">\n        <path\n            fill=\"none\"\n            stroke=\"#D4CAB8\"\n            stroke-width=\"4\"\n            d={describeArc(50, 50, 48, 0, radius)}\n        />\n    </svg>\n);\n\n// From StackOverflow: https://stackoverflow.com/questions/5736398/how-to-calculate-the-svg-path-for-an-arc-of-a-circle\nfunction polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n    var angleInRadians = ((angleInDegrees - 90) * Math.PI) / 180.0;\n\n    return {\n        x: centerX + radius * Math.cos(angleInRadians),\n        y: centerY + radius * Math.sin(angleInRadians)\n    };\n}\n\nfunction describeArc(x, y, radius, startAngle, endAngle) {\n    var start = polarToCartesian(x, y, radius, endAngle);\n    var end = polarToCartesian(x, y, radius, startAngle);\n\n    var largeArcFlag = endAngle - startAngle <= 180 ? '0' : '1';\n\n    var d = [\n        'M',\n        start.x,\n        start.y,\n        'A',\n        radius,\n        radius,\n        0,\n        largeArcFlag,\n        0,\n        end.x,\n        end.y\n    ].join(' ');\n\n    return d;\n}\n\n// From StackOverflow: https://stackoverflow.com/questions/10756313/javascript-jquery-map-a-range-of-numbers-to-another-range-of-numbers\nfunction mapNumber(number, in_min, in_max, out_min, out_max) {\n    return (\n        ((number - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min\n    );\n}","import React, { Component } from 'react';\nimport { Row, Container } from 'react-bootstrap';\nimport './main.css';\nimport './home.css';\n\nimport Timer from './Timer';\n\nexport default class About extends Component {\n    constructor() {\n        super();\n        this.state = {\n            width: window.innerWidth,\n        };\n    }\n\n    render() {\n        document.title = 'About DÃ­a de Dilla';\n\n        return (\n            <Container style={{ height: '100vh', display: 'flex', justifyContent: 'center', alignItems: 'center', marginTop: '-56px' }} >\n                <Row className='align-items-center justify-content-space-evenly'>\n                    <Timer timeTillDate='04 25 2020, 7:00 pm' timeFormat='MM DD YYY, h:mm a' />\n                </Row>\n            </Container>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport './main.css'\nimport './recipes.css'\n\nexport default class Recipe extends Component {\n    render() {           \n        const info = this.props.info;\n\n        return (\n            <Button className='recipe'>\n                <img src={info.image} className='recipe-img' alt='icon'></img>\n                <p className='recipe-label'>{info.label}</p>\n                <p className='recipe-category'>{info.categ}</p>\n            </Button>\n        )\n    }\n}","export const SMORE = {\n    image: 'assets/smore.png',\n    label: \"s'mores\", \n    categ: 'yeet-dilla'\n}\n\nexport const POLLO = {\n    image: 'assets/pollo.png',\n    label: 'pollo asada',\n    categ: 'yeetadilla'\n}\n\nexport const OREO = {\n    image: 'assets/oreo.png',\n    label: \"cookies 'n' creme\",\n    categ: 'yeet-dilla'\n}\n\nexport const CALI = {\n    image: 'assets/cali.png',\n    label: 'california roll',\n    categ: 'jaaedilla'\n}\n\nexport const TRIPE = {\n    image: 'assets/tripe.png',\n    label: 'food court beef tripe',\n    categ: 'jaaedilla'\n}\n\nexport const CARNE = {\n    image: 'assets/carne.png',\n    label: 'carne asada',\n    categ: 'yeetadilla'\n}","import React, { Component } from 'react';\n// import { Link } from 'react-router-dom';\nimport { Container, Row } from 'react-bootstrap';\nimport './main.css';\nimport './recipes.css';\n\nimport Recipe from './Recipe';\n\nimport { SMORE, OREO, POLLO, CALI, TRIPE, CARNE } from '../strings'\n\nexport default class Recipes extends Component {\n    render() {\n        document.title = 'Recipes'\n\n        return (\n            <Container className='nav-offset center-column'>\n                <div className='section'>\n                    <Row>\n                        <p className='section-header'>the classics</p>\n                    </Row>\n                    <Row>\n                        <Recipe info={ SMORE } />\n                        <Recipe info={ POLLO } />\n                    </Row>\n                </div>\n                <div className='section'>\n                    <Row>\n                        <p className='section-header'>our favorites</p>\n                    </Row>\n                    <Row>\n                        <Recipe info={ OREO } />\n                        <Recipe info={ CARNE } />\n                    </Row>\n                </div>\n                <div className='section'>\n                    <Row>\n                        <p className='section-header'>ernest's chow</p>\n                    </Row>\n                    <Row>\n                        <Recipe info={ CALI } />\n                        <Recipe info={ TRIPE } />\n                    </Row>\n                </div>\n            </Container>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\n\nimport './nav.css';\nimport './main.css';\n\nexport default class Navigation extends Component {\n    render() {\n        return (\n            <Navbar>\n                <Navbar.Brand href='/' style={{paddingLeft: '5vw'}}>\n                    <img \n                        alt=''\n                        src='assets/logo.png'\n                        className='d-inline-block align-center brand-image'\n                    />\n                </Navbar.Brand>\n                {/* <Navbar.Collapse id='responsive-navbar-nav'> */}\n                <Nav className='ml-auto' style={{paddingRight: '50px'}}>\n                    <Nav.Link href='/'>about</Nav.Link>\n                    <Nav.Link href='/recipes'>recipes</Nav.Link>\n                </Nav>\n                {/* </Navbar.Collapse> */}\n            </Navbar>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport About from './Components/About';\nimport Recipes from './Components/Recipes';\nimport Navigation from './Components/Navigation';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      active: 'home'\n    }\n  }\n\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div>\n          <Navigation />\n          <Route exact path=\"/\" component={ About } />\n          <Route path={process.env.PUBLIC_URL + \"/recipes\"} component={ Recipes } />\n        </div>\n      </Router>\n    )\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}